version: "3.9"

services:
  apd.database:
    image: postgres:latest
    container_name: apd.database
    environment:
      - POSTGRES_DB=adp
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./.containers/apd-db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 10s
      retries: 10

  apd.migrations:
    build:
      context: .
      dockerfile: Apd.Api/Dockerfile
      target: migrations
    container_name: apd.migrations
    depends_on:
      apd.database:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    entrypoint:
      [
        "/bin/bash",
        "-c",
        "ls /app/publish && dotnet ef database update --project /src/Apd.Api/Apd.Api.csproj --context ApdDbContext",
      ]

  apd.api:
    build:
      context: .
      dockerfile: Apd.Api/Dockerfile
    container_name: apd.api
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      apd.database:
        condition: service_healthy
      apd.migrations:
        condition: service_completed_successfully
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
  
  apd.front:
    image: apd.front
    container_name: apd.front
    build:
      context: test_front/test-frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      apd.api:
        condition: service_started
